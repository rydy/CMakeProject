CMAKE_MINIMUM_REQUIRED(VERSION 3.6.1 FATAL_ERROR)

PROJECT(demo_unittest)

AUX_SOURCE_DIRECTORY(. SRC_DEMO_UNITTEST)
ADD_EXECUTABLE(${PROJECT_NAME}
	${SRC_DEMO_UNITTEST})

#boost
SET(BOOST_ROOT "$ENV{BOOST_HOME}")	#ENV:BOOST_HOME
SET(Boost_USE_STATIC_LIBS ON)
FIND_PACKAGE(Boost 1.59.0 REQUIRED COMPONENTS system regex date_time atomic chrono thread filesystem log log_setup program_options)
IF(Boost_FOUND)
	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Boost_LIBRARIES})
ELSE(Boost_FOUND)
	MESSAGE(FATAL_ERROR "Boost not found!")
ENDIF(Boost_FOUND)

#gtest #ENV:GTEST_HOME_X86/64
IF($ENV{HOST_PLATFORM} STREQUAL PLATFORM_X86)
	IF($ENV{HOST_OS} STREQUAL OS_WINDOWS)
		SET(GTEST_ROOT "$ENV{GTEST_HOME_X86}")
	ELSEIF($ENV{HOST_OS} STREQUAL OS_LINUX)
	ENDIF()
ELSEIF($ENV{HOST_PLATFORM} STREQUAL PLATFORM_X64)
	IF($ENV{HOST_OS} STREQUAL OS_WINDOWS)
		SET(GTEST_ROOT "$ENV{GTEST_HOME_X64}")
	ELSEIF($ENV{HOST_OS} STREQUAL OS_LINUX)
	ENDIF()
ENDIF()
MESSAGE(STATUS "GTEST_ROOT is : " ${GTEST_ROOT})
FIND_PACKAGE(GTest REQUIRED)
IF(GTEST_FOUND)
	INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${GTEST_BOTH_LIBRARIES})
	MESSAGE(STATUS "GTEST_INCLUDE_DIRS Iis : " ${GTEST_INCLUDE_DIRS})
	MESSAGE(STATUS "GTEST_BOTH_LIBRARIES is : " ${GTEST_BOTH_LIBRARIES})
ELSE(GTEST_FOUND)
	MESSAGE(FATAL_ERROR "GTest not found!")
ENDIF(GTEST_FOUND)
