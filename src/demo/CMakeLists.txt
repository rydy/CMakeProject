CMAKE_MINIMUM_REQUIRED(VERSION 3.2.3 FATAL_ERROR)

PROJECT(demo)

FILE(GLOB HDR_DEMO ${PROJECT_SOURCE_DIR}/*.h)	#文件操作命令
AUX_SOURCE_DIRECTORY(. SRC_DEMO)				#将源代码文件存储到变量中
ADD_EXECUTABLE(${PROJECT_NAME}
	${SRC_DEMO}
	${HDR_DEMO})#添加可执行文件

#boost
SET(BOOST_ROOT "$ENV{BOOST_HOME}")	#ENV:BOOST_HOME
SET(Boost_USE_STATIC_LIBS ON)
FIND_PACKAGE(Boost 1.59.0 REQUIRED COMPONENTS system regex date_time atomic chrono thread filesystem log log_setup program_options)
IF(Boost_FOUND)
	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${Boost_LIBRARIES})
ELSE(Boost_FOUND)
	MESSAGE(FATAL_ERROR "Boost not found!"
	)
ENDIF(Boost_FOUND)

IF(MSVC)
	CONFIGURE_FILE("${PROJECT_SOURCE_DIR}/../../other/VSUserTemplate.vcxproj.user" "${PROJECT_BINARY_DIR}/${PROJECT_NAME}.vcxproj.user")
ENDIF(MSVC)

#demo_lib
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}../../demo_lib)
ADD_DEPENDENCIES(${PROJECT_NAME} demo_lib)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} demo_lib)

#demo_dll
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}../../demo_dll)
ADD_DEPENDENCIES(${PROJECT_NAME} demo_dll)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} demo_dll)